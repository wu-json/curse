version = 0

# Large example with dependencies and migrations for UI testing

# Database migration (runs once)
[[process]]
name = "db-migrate"
command = "bun run examples/large/db-migrate.ts"

# Data seeding (runs once, depends on migration)
[[process]]
name = "seed-data"
command = "bun run examples/large/seed-data.ts"
deps = [{ name = "db-migrate", condition = "succeeded" }]

# Core services that depend on database setup
[[process]]
name = "database"
command = "bun run examples/large/mock-database.ts"
deps = [{ name = "seed-data", condition = "succeeded" }]

[[process]]
name = "cache"
command = "bun run examples/large/mock-cache.ts"
deps = [{ name = "database", condition = "ready" }]

# Application services
[[process]]
name = "api-server"
command = "bun run examples/large/api-server.ts"
env = { PORT = 8001, SERVICE_NAME = "API Server" }
readiness_probe = { type = "http", host = "127.0.0.1", path = "/health", port = 8001 }

[[process]]
name = "web-server"
command = "bun run examples/large/web-server.ts"
env = { PORT = 8002, SERVICE_NAME = "Web Server" }
readiness_probe = { type = "http", host = "127.0.0.1", path = "/health", port = 8002 }
deps = [{ name = "api-server", condition = "ready" }]

# Background services
[[process]]
name = "queue-worker"
command = "bun run examples/large/mock-queue.ts"

[[process]]
name = "email-service"
command = "bun run examples/large/mock-email.ts"
deps = [{ name = "queue-worker", condition = "started" }]

# Analytics service (depends on web traffic)
[[process]]
name = "analytics"
command = "bun run examples/large/mock-analytics.ts"
deps = [{ name = "web-server", condition = "ready" }]
